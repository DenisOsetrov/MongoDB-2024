- Спочатку запускаємо використання бази даних:
    use osetrov
- наповнюємо її колекцією студентів і вчителів з lesson-hw-2-dump
    і перевіряємо     db.students.find()  // Ctrl+Enter
    і перевіряємо     db.teacher.find()  // Ctrl+Enter
- працюємо в консолі. Всі коланди можна скопіювати до консолі!
- db.students.deleteMany({}) - команда видалення вказаної колекції.

=== Лекція №2 ===

Основні агрегаційні функції в MongoDB включають такі:

$match: Фільтрує документи у колекції за допомогою умови.
$group: Групує документи за певними полями і дозволяє виконувати агрегатні функції (наприклад, $sum, $avg, $min, $max) на групах документів.
$project: Вибирає або переформатовує поля документів у вихідному наборі результатів.
$sort: Сортує вихідний набір документів за певними полями.
$limit: Обмежує кількість документів, які виходять з агрегації.
$skip: Пропускає певну кількість документів у вихідному наборі.
$unwind: Розгортає масивні поля документів, створюючи для кожного елементу окремий документ.
$lookup: Поєднує дані з іншої колекції, використовуючи зовнішній ключ.
$addFields: Додає нові поля до документів у вихідному наборі.
$replaceRoot: Замінює корінь документа на певне поле або піддокумент.



// Отримання всіх записів з колекції "students"
db.students.find()

// Отримання всіх записів з колекції "teacher"
db.teacher.find()

// Агрегація вчителів для групування за предметом уроку
db.teacher.aggregate([
    {
        $group: {
            _id: '$lesson'
        }
    }
])

// Агрегація вчителів для обчислення різних метрик по предметах
db.teacher.aggregate([
    {
        $group: {
            _id: '$lesson',                    // групує за полем lesson, а _id: null - об'єднати всі документи без будь-якого групування
            minPayment: {$min: '$payment'},
            maxPayment: {$max: '$payment'},
            avgPayment: {$avg: '$payment'},
            countOfTeachers: {$sum: 1},        // де 1 - це не true, а множник. Тобто, рахуємо усі і * на 1
            countOfDoubleTeachers: {$sum: 2},
            sum: {$sum: '$payment'}
        }
    },
    {
        $match: {
            minPayment: {$lt: 2500} // Фільтруємо записи за мінімальною оплатою менше 2500
        }
    },
    {
        $sort: {
            sum: -1 // Сортуємо за сумою у зворотньому порядку
        }
    },
    {
        $project: {
            _id: 0,
            myLesson: '$_id', // Перейменовуємо "_id" на "myLesson"
            minPayment:1,
            maxPayment: 1,
            avgPayment: 1,
            countOfTeachers: 1,
            countOfDoubleTeachers: 1,
            sum: 1
        }
    }
])



// З'єднання двох колекцій через оператор $lookup
// В колекції вчителів створюємо масив учнів [myClass], в яких викладає цей вчитель, з'єднавши дві колекції: вчителі та
студенти.
db.teacher.aggregate([
    {
        $lookup: {
            from: 'students',
            localField: 'class_curator',
            foreignField: 'class',
            as: 'myClass'
        }
    }
])


// Агрегація вчителів для пошуку вчителів, які кураторують класи вище 4
db.teacher.aggregate([
    {
        $match:{
            class_curator:{$gt:4} // Фільтруємо за класом куратора вище 4
        }
    },
    {
        $lookup:{
            from:'students',              // Пошук учнів зі студентів
            localField:'class_curator',   // Поле з teachers
            foreignField:'class',         // Поле зі students
            as:'myStudents'               // Поле результату з'єднання
        }
    },
    {
        $match:{
            'myStudents._id':{$exists:1} // Фільтруємо результати, де є принаймні один учень
        }
    }
])

// Агрегація вчителів з пропуском перших 4 записів та обмеженням результатів до 2
db.teacher.aggregate([
    {
        $match:{
            class_curator:{$gt:4} // Фільтруємо за класом куратора вище 4
        },
    },
    {
        $skip:4 // Пропускаємо перші 4 записи
    },
    {
        $limit:2 // Обмежуємо результати до 2
    },
])


// Підрахунок кількості батьків-лікарів серед учнів, котрі навчаються під керівництвом вчителя-куратора
db.teacher.aggregate([
    {
        $lookup:{
            from:'students',
            localField:'class_curator',
            foreignField:'class',
            as:'myStudents'
        }
    },
    {
        $unwind:'$myStudents' // Розгортаємо масив учнів
    },
    {
        $unwind: '$myStudents.parents' // Розгортаємо масив батьків кожного учня
    },
    {
        $match:{
            'myStudents.parents.profession':'doctor' // Фільтруємо за професією "лікар"
        }
    },
    {
        $count:'doctorsCount' // Підраховуємо кількість результатів
    }
])

// Агрегація студентів з додаванням поля довжини імені, фільтрацією за довжиною імені та вибіркою полів для виводу
db.students.aggregate([
    {
        $addFields:{
            nameLength:{$strLenCP:'$name'} // Додаємо поле з довжиною імені
        }
    },
    {
        $match:{
            nameLength:4 // Фільтруємо за довжиною імені 4 символи
        }
    },
    {
        $project:{
            nameLength:0 // Вибираємо всі поля крім поля з довжиною імені для виводу
        }
    }
])

